@use "sass:map";

// The CSS variables are used in the dynamic-css.js file in order to reuse the same SCSS
// variable presets.
:root {
  --w-base-increment: #{$base-increment};
  --w-css-scope: #{$css-scope};
  --w-base-bg-color-rgb: #{map.get($theme-light, 'base-bg-color-rgb')};
  --w-base-color-rgb: #{map.get($theme-light, 'base-color-rgb')};
  --w-contrast-bg-color-rgb: #{map.get($theme-light, 'contrast-bg-color-rgb')};
  --w-contrast-color-rgb: #{map.get($theme-light, 'contrast-color-rgb')};
  --w-disabled-bg-color-rgb: #{map.get($theme-light, 'disabled-bg-color-rgb')};
  --w-disabled-color-rgb: #{map.get($theme-light, 'disabled-color-rgb')};

  background-color: rgb(var(--w-base-bg-color-rgb));
  color: rgb(var(--w-base-color-rgb));
}
:root[data-theme="dark"] {
  --w-base-bg-color-rgb: #{map.get($theme-dark, 'base-bg-color-rgb')};
  --w-base-color-rgb: #{map.get($theme-dark, 'base-color-rgb')};
  --w-contrast-bg-color-rgb: #{map.get($theme-dark, 'contrast-bg-color-rgb')};
  --w-contrast-color-rgb: #{map.get($theme-dark, 'contrast-color-rgb')};
  --w-disabled-color-rgb: #{map.get($theme-dark, 'disabled-color-rgb')};
  --w-disabled-bg-color-rgb: #{map.get($theme-dark, 'disabled-bg-color-rgb')};
  --w-disabled-color-rgb: #{map.get($theme-dark, 'disabled-color-rgb')};
}

* {
  outline: none;
  margin: 0;
  padding: 0;
}

body {overflow-x: hidden;}

a {text-decoration: none;}

.w-app, .w-app *, .w-app :before, .w-app :after {box-sizing: border-box;}

.w-main {
  padding-left: 3 * $base-increment;
  padding-right: 3 * $base-increment;
}
