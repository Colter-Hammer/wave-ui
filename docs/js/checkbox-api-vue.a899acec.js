(window["webpackJsonpWaveUI"]=window["webpackJsonpWaveUI"]||[]).push([["checkbox-api-vue"],{4754:function(e,t,o){"use strict";o.r(t);var a=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[o("div",{staticClass:"w-divider my12"}),o("title-link",{staticClass:"title1",attrs:{h2:"",slug:"w-checkboxes-api"}},[e._v("<w-checkboxes> API")]),o("alert",{staticClass:"mb6",attrs:{info:""}},[e._v("The props will soon be more detailed.")]),o("api",{staticClass:"mt0",attrs:{items:e.checkboxesProps,descriptions:e.checkboxes.propsDescs,title:"Props"}}),o("api",{attrs:{items:e.checkboxes.slots,title:"Slots"}}),o("api",{attrs:{items:e.checkboxesEvents,title:"Events"}}),o("div",{staticClass:"w-divider my12"}),o("title-link",{staticClass:"title1",attrs:{h2:"",slug:"w-checkbox-api"}},[e._v("<w-checkbox> API")]),o("api",{staticClass:"mt0",attrs:{items:e.checkboxProps,descriptions:e.checkbox.propsDescs,title:"Props"}}),o("api",{attrs:{items:e.checkbox.slots,title:"Slots"}}),o("api",{attrs:{items:e.checkboxEvents,title:"Events"}})],1)},s=[],c=(o("13d5"),o("5530")),r=o("c0bc"),i=o("fc6d"),n=o("b0e5"),l={propsDescs:{items:"",value:'<strong class="error"><code>model-value</code> in Vue 3.</strong><br>',labelOnLeft:"Moves the label to the left of each checkbox.",itemLabelKey:"The property name (aka key) in each item object where to find the label of the item.",itemValueKey:"The property name (aka key) in each item object where to find the value of the item.",itemColorKey:"The property name (aka key) in each item object where to find the color of the item.",inline:"Displays all the checkboxes inline instead of in column.",round:"Displays round checkboxes instead of square ones.",color:'Applies a color to the active checkbox. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href="/colors">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',name:"Provide a native HTML <code>name</code> attribute to the checkbox. If not provided, a unique common name will be computed and applied to all the checkboxes.",disabled:"Disables all the checkboxes making them unreactive to user interactions.",readonly:"The checkbox will still look like an interactive checkbox except that it is read-only: its current value cannot be changed by user interaction.",required:"Applies the native HTML <code>required</code> attribute to each checkbox.",validators:'<span class="deep-orange">Only for validation, when the <strong class="code">w-checkboxes</strong> component is wrapped into a <strong class="code">w-form</strong></span>.<br>An array of functions determining the validity of the checkbox. Each function will be executed on checkbox validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the checkbox.'},slots:{item:{description:"Provide a custom content for each checkbox label."}},eventsDescs:{input:"Emitted each time any of the checkboxes is toggled. It updates the v-model value in Vue 2.x only.<br>An array of return-value of each checked checkbox is passed as a parameter.<br>A return-value is, in this order (if they exist), either: the item value, the item label, the item index.","update:modelValue":"Emitted each time any of the checkboxes is toggled. It updates the v-model value in Vue 3 only.<br>An array of return-value of each checked checkbox is passed as a parameter.<br>A return-value is, in this order (if they exist), either: the item value, the item label, the item index.",focus:"Emitted on each checkbox focus. The focus DOM event is returned as a parameter."}},h={propsDescs:{value:'<strong class="error"><code>model-value</code> in Vue 3.</strong><br>',returnvalue:'<strong class="error"><code>model-value</code> in Vue 3.</strong><br>',label:"Sets a visible label for the checkbox.",labelOnLeft:"Moves the label to the left of the checkbox. By default the label is displayed on the right.",color:'Applies a color to the checkbox when active. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href="/colors">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',noRipple:"Removes the ripple animation on check.",indeterminate:"Applies an indeterminate state on the checkbox. E.g. when it represents the selected state of a collection of elements where some are checked and some not.",round:"Displays a round checkbox instead of a square one.",name:"Provide a native HTML <code>name</code> attribute to the checkbox. If not provided, a unique name will be computed.",disabled:"Disables the checkbox making it unreactive to user interactions.",readonly:"The checkbox will still look like an interactive checkbox except that it is read-only: its current value cannot be changed by user interaction.",required:"Applies the native HTML <code>required</code> attribute to the checkbox.",validators:'<span class="deep-orange">Only for validation, when the checkbox is wrapped into a <strong class="code">w-form</strong></span>.<br>An array of functions determining the validity of the checkbox. Each function will be executed on checkbox validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the checkbox.'},slots:{default:{description:"The checkbox label content."}},eventsDescs:{input:"Emitted each time the state of the checkbox changes. It updates the v-model value in Vue 2.x only.<br>A boolean for the current state is passed as a parameter.","update:modelValue":"Emitted each time the state of the checkbox changes. It updates the v-model value in Vue 3 only.<br>A boolean for the current state is passed as a parameter.",focus:"Emitted on each checkbox focus. The focus DOM event is returned as a parameter."}},d={data:function(){return{checkboxes:l,checkbox:h}},computed:{checkboxesProps:function(){return Object(c["a"])(Object(c["a"])({},i["a"].props),r["a"].props)},checkboxProps:function(){return Object(c["a"])(Object(c["a"])({},n["a"].props),r["a"].props)},checkboxesEvents:function(){return i["a"].emits.reduce((function(e,t){return(e[t]={description:l.eventsDescs[t]||""})&&e}),{})},checkboxEvents:function(){return n["a"].emits.reduce((function(e,t){return(e[t]={description:h.eventsDescs[t]||""})&&e}),{})}}},u=d,b=o("2877"),p=Object(b["a"])(u,a,s,!1,null,null,null);t["default"]=p.exports}}]);
//# sourceMappingURL=checkbox-api-vue.a899acec.js.map