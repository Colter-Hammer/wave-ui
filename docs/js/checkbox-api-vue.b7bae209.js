(window["webpackJsonpWaveUI"]=window["webpackJsonpWaveUI"]||[]).push([["checkbox-api-vue"],{4754:function(e,t,o){"use strict";o.r(t);var s=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[o("div",{staticClass:"w-divider my12"}),o("title-link",{staticClass:"title1",attrs:{h2:"",slug:"w-checkboxes-api"}},[e._v("<w-checkboxes> API")]),o("alert",{staticClass:"mb6",attrs:{info:""}},[e._v("The props will soon be more detailed.")]),o("api",{staticClass:"mt0",attrs:{items:e.checkboxesProps,descriptions:e.checkboxes.propsDescs,title:"Props"}}),o("api",{attrs:{items:e.checkboxes.slots,title:"Slots"}}),o("api",{attrs:{items:e.checkboxesEvents,title:"Events"}}),o("div",{staticClass:"w-divider my12"}),o("title-link",{staticClass:"title1",attrs:{h2:"",slug:"w-checkbox-api"}},[e._v("<w-checkbox> API")]),o("api",{staticClass:"mt0",attrs:{items:e.checkboxProps,descriptions:e.checkbox.propsDescs,title:"Props"}}),o("api",{attrs:{items:e.checkbox.slots,title:"Slots"}}),o("api",{attrs:{items:e.checkboxEvents,title:"Events"}})],1)},a=[],r=(o("13d5"),o("5530")),c=o("c0bc"),i=o("fc6d"),l=o("b0e5"),n={propsDescs:{items:"",value:"",labelOnLeft:"",itemLabel:"",itemValue:"",itemColor:"",inline:"",round:"Sets a maximum border-radius on the corners of the component, giving it a round look.",color:'Applies a color to the active checkboxes. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href="/colors">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',name:"",disabled:"",readonly:"",required:"",validators:""},slots:{item:{description:"Provide a custom content for each checkbox label."}},eventsDescs:{input:"Emitted each time any of the checkboxes is toggled. It updates the v-model value in Vue 2.x only.<br>An array of return-value of each checked checkbox is passed as a parameter.<br>A return-value is, in this order (if they exist), either: the item value, the item label, the item index.","update:modelValue":"Emitted each time any of the checkboxes is toggled. It updates the v-model value in Vue 3 only.<br>An array of return-value of each checked checkbox is passed as a parameter.<br>A return-value is, in this order (if they exist), either: the item value, the item label, the item index.",focus:"Emitted on each checkbox focus. The focus DOM event is returned as a parameter."}},h={propsDescs:{value:"",returnValue:"",label:"",labelOnLeft:"",color:'Applies a color to the checkbox when active. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href="/colors">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',noRipple:"",indeterminate:"",round:"Sets a maximum border-radius on the corners of the component, giving it a round look.",name:"",disabled:"",readonly:"",required:"",validators:""},slots:{default:{description:"The checkbox label content."}},eventsDescs:{input:"Emitted each time the state of the checkbox changes. It updates the v-model value in Vue 2.x only.<br>A boolean for the current state is passed as a parameter.","update:modelValue":"Emitted each time the state of the checkbox changes. It updates the v-model value in Vue 3 only.<br>A boolean for the current state is passed as a parameter.",focus:"Emitted on each checkbox focus. The focus DOM event is returned as a parameter."}},u={data:function(){return{checkboxes:n,checkbox:h}},computed:{checkboxesProps:function(){return Object(r["a"])(Object(r["a"])({},i["a"].props),c["a"].props)},checkboxProps:function(){return Object(r["a"])(Object(r["a"])({},l["a"].props),c["a"].props)},checkboxesEvents:function(){return i["a"].emits.reduce((function(e,t){return(e[t]={description:n.eventsDescs[t]||""})&&e}),{})},checkboxEvents:function(){return l["a"].emits.reduce((function(e,t){return(e[t]={description:h.eventsDescs[t]||""})&&e}),{})}}},d=u,p=o("2877"),b=Object(p["a"])(d,s,a,!1,null,null,null);t["default"]=b.exports}}]);
//# sourceMappingURL=checkbox-api-vue.b7bae209.js.map