(window["webpackJsonpWaveUI"]=window["webpackJsonpWaveUI"]||[]).push([["notification-api-vue"],{"6de8":function(t,e,o){"use strict";o.r(e);var i=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",[o("div",{staticClass:"w-divider my12"}),o("title-link",{staticClass:"title1",attrs:{h2:""}},[t._v("API")]),o("alert",{staticClass:"mb6",attrs:{info:""}},[t._v("The props will soon be more detailed.")]),o("api",{staticClass:"mt0",attrs:{items:t.props,descriptions:t.propsDescs,title:"Props"}}),o("api",{attrs:{items:t.slots,title:"Slots"}}),o("api",{attrs:{items:t.events,title:"Events"}})],1)},s=[],n=(o("13d5"),o("5628")),a={value:'<strong class="error"><code>model-value</code> in Vue 3.</strong><br>This prop controls the visibility of the notification. Any truthy value will show the notification whereas any falsy value will hide it.',transition:'Applies a particular transition to the notification when showing and hiding.<br>Check all the transitions that apply to the notification in the <a href="#transitions">Transitions</a> example.',timeout:"",absolute:"Sets the CSS position of the notification to <code>absolute</code> (fixed by default).",top:"Places the notification at the top of the screen or at the top of its container if the <code>absolute</code> prop is set to true.",bottom:"Places the notification at the bottom of the screen or at the bottom of its container if the <code>absolute</code> prop is set to true.",left:"Places the notification at the left of the screen or at the left of its container if the <code>absolute</code> prop is set to true.",right:"Places the notification at the right of the screen or at the right of its container if the <code>absolute</code> prop is set to true.",zIndex:"Applies a z-index (positive or negative integer) to the notification.",success:"",info:"",warning:"",error:"",color:'Applies a color to the notification\'s text. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href="/colors">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',bgColor:'Applies a color to the notification\'s background. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href="/colors">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',shadow:"Applies a drop shadow to the notification.",tile:"Removes the default border-radius and sets sharp edges on the notification.",round:"Sets a maximum border-radius on the corners of the notification, giving it a round look.",plain:"",noBorder:"Removes the default border from the notification container.",borderLeft:"",borderRight:"",borderTop:"",borderBottom:"",outline:"The outline style applies the provided <code>color</code> (by default the color is inherited) to the text and border and no background color is set.",dismiss:"",xs:"Sets the size of the notification.",sm:"Sets the size of the notification.",md:"Sets the size of the notification.",lg:"Sets the size of the notification.",xl:"Sets the size of the notification."},r={default:{description:"The notification content."}},l={input:"Emitted on notification dismiss/hide. It updates the v-model value in Vue 2.x only.","update:modelValue":"Emitted on notification dismiss/hide. It updates the v-model value in Vue 3 only.",close:"Emitted on notification dismiss/hide."},c={data:function(){return{propsDescs:a,slots:r}},computed:{props:function(){return n["a"].props},events:function(){return n["a"].emits.reduce((function(t,e){return(t[e]={description:l[e]||""})&&t}),{})}}},h=c,d=o("2877"),f=Object(d["a"])(h,i,s,!1,null,null,null);e["default"]=f.exports}}]);
//# sourceMappingURL=notification-api-vue.4a8e9443.js.map