{"version":3,"sources":["webpack://WaveUI/./src/documentation/views/ui-components/checkbox/api.vue?9847","webpack://WaveUI/src/documentation/views/ui-components/checkbox/api.vue","webpack://WaveUI/./src/documentation/views/ui-components/checkbox/api.vue?663c","webpack://WaveUI/./src/documentation/views/ui-components/checkbox/api.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","checkboxesProps","checkboxes","propsDescs","slots","checkboxesEvents","checkboxProps","checkbox","checkboxEvents","staticRenderFns","items","value","labelOnLeft","itemLabelKey","itemValueKey","itemColorKey","inline","round","color","name","disabled","readonly","required","validators","item","eventsDescs","input","focus","returnvalue","label","noRipple","indeterminate","default","data","computed","component"],"mappings":"qIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,GAAG,KAAO,qBAAqB,CAACP,EAAIQ,GAAG,wBAAwBJ,EAAG,QAAQ,CAACE,YAAY,MAAMC,MAAM,CAAC,KAAO,KAAK,CAACP,EAAIQ,GAAG,8FAA8FJ,EAAG,MAAM,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIS,gBAAgB,aAAeT,EAAIU,WAAWC,WAAW,MAAQ,WAAWP,EAAG,MAAM,CAACG,MAAM,CAAC,MAAQP,EAAIU,WAAWE,MAAM,MAAQ,WAAWR,EAAG,MAAM,CAACG,MAAM,CAAC,MAAQP,EAAIa,iBAAiB,MAAQ,YAAYT,EAAG,MAAM,CAACE,YAAY,mBAAmBF,EAAG,aAAa,CAACE,YAAY,SAASC,MAAM,CAAC,GAAK,GAAG,KAAO,mBAAmB,CAACP,EAAIQ,GAAG,sBAAsBJ,EAAG,MAAM,CAACE,YAAY,MAAMC,MAAM,CAAC,MAAQP,EAAIc,cAAc,aAAed,EAAIe,SAASJ,WAAW,MAAQ,WAAWP,EAAG,MAAM,CAACG,MAAM,CAAC,MAAQP,EAAIe,SAASH,MAAM,MAAQ,WAAWR,EAAG,MAAM,CAACG,MAAM,CAAC,MAAQP,EAAIgB,eAAe,MAAQ,aAAa,IACliCC,EAAkB,G,4DC4BtB,GACEN,WAAY,CACVO,MAAO,GACPC,MAAO,wEACPC,YAAa,gDACbC,aAAc,uFACdC,aAAc,uFACdC,aAAc,uFACdC,OAAQ,2DACRC,MAAO,oDACPC,MAAO,6QACPC,KAAM,+JACNC,SAAU,2EACVC,SAAU,kJACVC,SAAU,4EACVC,WAAY,meAEdnB,MAAO,CACLoB,KAAM,CAAV,kEAEEC,YAAa,CACXC,MAAO,gSACP,oBAAqB,8RACrBC,MAAO,oFAIX,GACExB,WAAY,CACVQ,MAAO,wEACPiB,YAAa,wEACbC,MAAO,yCACPjB,YAAa,+FACbM,MAAO,kRACPY,SAAU,yCACVC,cAAe,8JACfd,MAAO,qDACPE,KAAM,sHACNC,SAAU,mEACVC,SAAU,kJACVC,SAAU,2EACVC,WAAY,ubAEdnB,MAAO,CACL4B,QAAS,CAAb,4CAEEP,YAAa,CACXC,MAAO,kKACP,oBAAqB,gKACrBC,MAAO,oFAIX,GACEM,KAAM,WAAR,OACA,aACA,aAGEC,SAAU,CAGRjC,gBAHJ,WAIM,OAAO,iCAAb,6BAEIK,cANJ,WAOM,OAAO,iCAAb,6BAEID,iBATJ,WAUM,OAAO,EAAb,2FAEIG,eAZJ,WAaM,OAAO,EAAb,6FCrG0X,I,YCOtX2B,EAAY,eACd,EACA5C,EACAkB,GACA,EACA,KACA,KACA,MAIa,aAAA0B,E","file":"js/checkbox-api-vue.0829d313.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\",\"slug\":\"w-checkboxes-api\"}},[_vm._v(\"<w-checkboxes> API\")]),_c('alert',{staticClass:\"mb6\",attrs:{\"info\":\"\"}},[_vm._v(\"The missing props descriptions will be added shortly (all the props are already listed).\")]),_c('api',{staticClass:\"mt0\",attrs:{\"items\":_vm.checkboxesProps,\"descriptions\":_vm.checkboxes.propsDescs,\"title\":\"Props\"}}),_c('api',{attrs:{\"items\":_vm.checkboxes.slots,\"title\":\"Slots\"}}),_c('api',{attrs:{\"items\":_vm.checkboxesEvents,\"title\":\"Events\"}}),_c('div',{staticClass:\"w-divider my12\"}),_c('title-link',{staticClass:\"title1\",attrs:{\"h2\":\"\",\"slug\":\"w-checkbox-api\"}},[_vm._v(\"<w-checkbox> API\")]),_c('api',{staticClass:\"mt0\",attrs:{\"items\":_vm.checkboxProps,\"descriptions\":_vm.checkbox.propsDescs,\"title\":\"Props\"}}),_c('api',{attrs:{\"items\":_vm.checkbox.slots,\"title\":\"Slots\"}}),_c('api',{attrs:{\"items\":_vm.checkboxEvents,\"title\":\"Events\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\ndiv\n  .w-divider.my12\n  //- w-checkboxes.\n  title-link.title1(h2 slug=\"w-checkboxes-api\") &lt;w-checkboxes&gt; API\n  alert.mb6(info) The missing props descriptions will be added shortly (all the props are already listed).\n\n  api.mt0(:items=\"checkboxesProps\" :descriptions=\"checkboxes.propsDescs\" title=\"Props\")\n\n  api(:items=\"checkboxes.slots\" title=\"Slots\")\n\n  api(:items=\"checkboxesEvents\" title=\"Events\")\n\n  .w-divider.my12\n\n  //- w-checkbox.\n  title-link.title1(h2 slug=\"w-checkbox-api\") &lt;w-checkbox&gt; API\n  api.mt0(:items=\"checkboxProps\" :descriptions=\"checkbox.propsDescs\" title=\"Props\")\n\n  api(:items=\"checkbox.slots\" title=\"Slots\")\n\n  api(:items=\"checkboxEvents\" title=\"Events\")\n</template>\n\n<script>\nimport FormElementMixin from '@/wave-ui/mixins/form-elements'\nimport WCheckboxes from '@/wave-ui/components/w-checkboxes'\nimport WCheckbox from '@/wave-ui/components/w-checkbox'\n\nconst checkboxes = {\n  propsDescs: {\n    items: '',\n    value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>',\n    labelOnLeft: 'Moves the label to the left of each checkbox.',\n    itemLabelKey: 'The property name (aka key) in each item object where to find the label of the item.',\n    itemValueKey: 'The property name (aka key) in each item object where to find the value of the item.',\n    itemColorKey: 'The property name (aka key) in each item object where to find the color of the item.',\n    inline: 'Displays all the checkboxes inline instead of in column.',\n    round: 'Displays round checkboxes instead of square ones.',\n    color: 'Applies a color to the active checkbox. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\n    name: 'Provide a native HTML <code>name</code> attribute to the checkbox. If not provided, a unique common name will be computed and applied to all the checkboxes.',\n    disabled: 'Disables all the checkboxes making them unreactive to user interactions.',\n    readonly: 'The checkbox will still look like an interactive checkbox except that it is read-only: its current value cannot be changed by user interaction.',\n    required: 'Applies the native HTML <code>required</code> attribute to each checkbox.',\n    validators: '<span class=\"deep-orange\">Only for validation, when the <strong class=\"code\">w-checkboxes</strong> component is wrapped into a <strong class=\"code\">w-form</strong></span>.<br>An array of functions determining the validity of the checkbox. Each function will be executed on checkbox validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the checkbox.'\n  },\n  slots: {\n    item: { description: 'Provide a custom content for each checkbox label.' }\n  },\n  eventsDescs: {\n    input: 'Emitted each time any of the checkboxes is toggled.<br>Updates the v-model value in Vue 2.x only.<br>An array of return-value of each checked checkbox is passed as a parameter.<br>A return-value is, in this order (if they exist), either: the item value, the item label, the item index.',\n    'update:modelValue': 'Emitted each time any of the checkboxes is toggled.<br>Updates the v-model value in Vue 3 only.<br>An array of return-value of each checked checkbox is passed as a parameter.<br>A return-value is, in this order (if they exist), either: the item value, the item label, the item index.',\n    focus: 'Emitted on each checkbox focus. The focus DOM event is returned as a parameter.'\n  }\n}\n\nconst checkbox = {\n  propsDescs: {\n    value: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>',\n    returnvalue: '<strong class=\"error\"><code>model-value</code> in Vue 3.</strong><br>',\n    label: 'Sets a visible label for the checkbox.',\n    labelOnLeft: 'Moves the label to the left of the checkbox. By default the label is displayed on the right.',\n    color: 'Applies a color to the checkbox when active. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href=\"/colors\">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',\n    noRipple: 'Removes the ripple animation on check.',\n    indeterminate: 'Applies an indeterminate state on the checkbox. E.g. when it represents the selected state of a collection of elements where some are checked and some not.',\n    round: 'Displays a round checkbox instead of a square one.',\n    name: 'Provide a native HTML <code>name</code> attribute to the checkbox. If not provided, a unique name will be computed.',\n    disabled: 'Disables the checkbox making it unreactive to user interactions.',\n    readonly: 'The checkbox will still look like an interactive checkbox except that it is read-only: its current value cannot be changed by user interaction.',\n    required: 'Applies the native HTML <code>required</code> attribute to the checkbox.',\n    validators: '<span class=\"deep-orange\">Only for validation, when the checkbox is wrapped into a <strong class=\"code\">w-form</strong></span>.<br>An array of functions determining the validity of the checkbox. Each function will be executed on checkbox validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the checkbox.'\n  },\n  slots: {\n    default: { description: 'The checkbox label content.' }\n  },\n  eventsDescs: {\n    input: 'Emitted each time the state of the checkbox changes.<br>Updates the v-model value in Vue 2.x only.<br>A boolean for the current state is passed as a parameter.',\n    'update:modelValue': 'Emitted each time the state of the checkbox changes.<br>Updates the v-model value in Vue 3 only.<br>A boolean for the current state is passed as a parameter.',\n    focus: 'Emitted on each checkbox focus. The focus DOM event is returned as a parameter.'\n  }\n}\n\nexport default {\n  data: () => ({\n    checkboxes,\n    checkbox\n  }),\n\n  computed: {\n    // Reads all the props and events directly from the component, so that as soon as a new prop or event\n    // is added it will appear even if no description is yet provided.\n    checkboxesProps () {\n      return { ...WCheckboxes.props, ...FormElementMixin.props }\n    },\n    checkboxProps () {\n      return { ...WCheckbox.props, ...FormElementMixin.props }\n    },\n    checkboxesEvents () {\n      return WCheckboxes.emits.reduce((obj, label) => (obj[label] = { description: checkboxes.eventsDescs[label] || '' }) && obj, {})\n    },\n    checkboxEvents () {\n      return WCheckbox.emits.reduce((obj, label) => (obj[label] = { description: checkbox.eventsDescs[label] || '' }) && obj, {})\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api.vue?vue&type=template&id=692347e5&lang=pug&\"\nimport script from \"./api.vue?vue&type=script&lang=js&\"\nexport * from \"./api.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}