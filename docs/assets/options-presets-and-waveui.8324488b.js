import{o as r,g as u,a as s,w as o,b as t,l as p,e,F as m,p as w,d as c,f as _,m as v,r as i,_ as T}from"./index.a54d5673.js";const U=e("code",null,"$waveui",-1),W=e("p",null,"Wave UI accepts these configuration options:",-1),x={class:"mt4"},$={class:"title3"},j={key:0},P=["innerHTML"],R={class:"mt6"},V={class:"mx1",href:"https://github.com/antoniandre/wave-ui/blob/main/src/wave-ui/utils/config.js",target:"_blank"},F=e("div",{class:"title3"},"The purpose of the components presets is to spare you the repetitive markup.",-1),M=e("p",null,[t(`If you are always using the same props on the Wave UI components of your app, the presets will
allow you to define the usual props of each of the components you need.`),e("br")],-1),S=e("p",{class:"text-bold"},"The presets act like a default value, that can be overridden if the same prop is provided on the Wave UI component in template markup.",-1),L=e("p",{class:"mt6"},"Example of presets:",-1),A=e("strong",{class:"code"},"w-button",-1),O=e("p",null,[t("Let's apply this preset to the "),e("strong",{class:"code"},"w-button"),t(` component and see how this component
would render.`)],-1),H=e("br",null,null,-1),N=e("p",null,"Note that:",-1),B=e("ul",null,[e("li",null,"The 10 first buttons have no prop and yet they don't render like the Wave UI defaults."),e("li",null,"The two green buttons override the preset background color."),e("li",null,"The first green button does not override the other presets except the background color, so they are applied.")],-1),D=e("code",null,"$waveui",-1),E=e("p",null,[t("The "),e("code",null,"$waveui"),t(` object is a Swiss Army Knife at your disposal. It can help you in many
ways, it is completely reactive, and accessible from anywhere in your app via:`),e("br")],-1),J=e("ul",null,[e("li",null,[e("code",null,"this.$waveui"),t(" in a vue component")]),e("li",null,[e("code",null,"inject('$waveui')"),t(" when using the Vue composition API")])],-1),G=e("p",{class:"mt6"},"Here is the list of what you can find in this object, along with the current values in this app as an illustration:",-1),K=["innerHTML"],Y=e("div",{class:"title4 text-bold mt6"},"Current value(s) in this app and context:",-1),q={class:"primary-light1"};function z(l,a,X,Z,ee,te){const d=i("title-link"),k=i("router-link"),b=i("w-icon"),y=i("w-tag"),f=i("ssh-pre"),h=i("w-button"),I=i("example"),g=i("w-accordion");return r(),u("main",null,[s(d,{class:"mt4",h1:"",slug:"options-presets-and-waveui"},{default:o(()=>[t("Options, presets & "),U]),_:1}),s(g,{class:"mt6",modelValue:l.openPanes,"onUpdate:modelValue":a[3]||(a[3]=n=>l.openPanes=n),items:3,"content-class":"pl11 pb6 mb12"},{"item-title.1":o(()=>[s(d,{class:"ml2 my3",h2:"",onClick:a[0]||(a[0]=p(()=>{},["prevent"]))},{default:o(()=>[t("Wave UI global options")]),_:1})]),"item-content.1":o(()=>[W,e("ul",x,[(r(!0),u(m,null,w(l.waveUiOptions,(n,C)=>(r(),u("li",{class:"mb4",key:C},[e("code",$,c(n.label),1),t(":"),n.route?(r(),u("div",j,[t("Read on in the"),s(k,{class:"mx1",to:n.route},{default:o(()=>[t(c(n.route.startsWith("w-")?n.route:n.label),1)]),_:2},1032,["to"]),t(c(n.route.startsWith("w-")?"component":"knowledge base page")+".",1)])):n.definition?(r(),u("div",{key:1,innerHTML:n.definition},null,8,P)):_("",!0)]))),128))]),e("div",R,[s(b,{class:"ml-1 mr1"},{default:o(()=>[t("wi-chevron-right")]),_:1}),t("View the"),e("a",V,[t("full list of options directly in the codebase"),s(b,{class:"ml2",md:""},{default:o(()=>[t("mdi mdi-open-in-new")]),_:1})]),t(".")])]),"item-title.2":o(()=>[s(d,{class:"ml2 my3",h2:"",onClick:a[1]||(a[1]=p(()=>{},["prevent"])),slug:"presets"},{default:o(()=>[t("Presets"),s(y,{class:"ml3","bg-color":"red-light1",lg:"",color:"white",round:""},{default:o(()=>[t("From version 3.0")]),_:1})]),_:1})]),"item-content.2":o(()=>[F,M,S,L,s(f,{class:"mt4",language:"js",label:"Javascript",dark:l.$store.state.darkMode},{default:o(()=>[t(`// In the global Wave UI config object.
presets: {
  'w-button': { color: 'light-blue-light4', bgColor: 'deep-purple-light2', tile: true, outline: true, lg: true },
  'w-accordion': { expandIconRotate90: true },
  'w-overlay': { bgColor: 'pink', opacity: 0.3 }
}
`)]),_:1},8,["dark"]),s(d,{h3:""},{default:o(()=>[t("Using "),A,t(" presets")]),_:1}),O,s(f,{class:"mt4",language:"js",label:"Javascript",dark:l.$store.state.darkMode},{default:o(()=>[t(`presets: {
  'w-button': {
    color: 'light-blue-light4',
    bgColor: 'deep-purple-light2',
    tile: true,
    outline: true,
    lg: true
  }
}
`)]),_:1},8,["dark"]),s(I,null,{pug:o(()=>[t('w-button.ma2(v-for="i in 10") button '+c("{{ i }}")+`
br
w-button.ma2(bg-color="success") green button
w-button.ma2(bg-color="success" :tile="false" :outline="false" :lg="false") another green button`)]),html:o(()=>[t('<w-button v-for="i in 10" class="ma2">button '+c("{{ i }}")+`</w-button>
<br>
<w-button bg-color="success" class="ma2">green button</w-button>
<w-button
  bg-color="success"
  :tile="false"
  :outline="false"
  :lg="false" class="ma2">
  another green button
</w-button>
`)]),js:o(()=>[t(`presets: {
  'w-button': {
    color: 'light-blue-light4',
    bgColor: 'deep-purple-light2',
    tile: true,
    outline: true
  }
}
`)]),default:o(()=>[(r(),u(m,null,w(10,n=>s(h,v({class:"ma2"},{color:"light-blue-light4",bgColor:"deep-purple-light2",tile:!0,outline:!0,lg:!0}),{default:o(()=>[t("button "+c(n),1)]),_:2},1040)),64)),H,s(h,v({class:"ma2","bg-color":"success"},{tile:!0,outline:!0,lg:!0}),{default:o(()=>[t("green button")]),_:1},16),s(h,{class:"ma2","bg-color":"success",tile:!1,outline:!1,lg:!1},{default:o(()=>[t("another green button")]),_:1})]),_:1}),N,B]),"item-title.3":o(()=>[s(d,{class:"ml2 my3",h2:"",onClick:a[2]||(a[2]=p(()=>{},["prevent"]))},{default:o(()=>[t("The "),D,t(" helper")]),_:1})]),"item-content.3":o(()=>[E,J,G,s(g,{items:l.waveuiObject,"title-class":"code","content-class":"ml5","expand-single":"","expand-icon-rotate90":""},{"item-content":o(({item:n})=>[e("p",{class:"text-bold",innerHTML:n.desc},null,8,K),n.title.includes("()")?_("",!0):(r(),u(m,{key:0},[Y,e("pre",q,c(l.$waveui[n.title]),1)],64))]),_:1},8,["items"])]),_:1},8,["modelValue"])])}const Q={data:()=>({openPanes:[!0,!0,!0],waveUiOptions:[{label:"on",definition:"From version 3.0. Sets the Wave UI root on a custom node (expects a valid CSS selector). Default: <code>#app</code>, if not found, <code>body</code>."},{label:"breakpoints",route:"breakpoints"},{label:"colors",route:"colors"},{label:"css",definition:"A set of CSS-related options."},{label:"icons",route:"w-icon"},{label:"iconsLigature",route:"w-icon"},{label:"notificationManager",route:"w-notification"},{label:"presets",route:"options-presets-and-waveui#presets"},{label:"theme",definition:"From version 3.0. Choose which theme to use: <code>light</code> or <code>dark</code>. You can also set <code>auto</code> to let Wave UI read the preferred theme from the user OS."}],waveuiObject:[{title:"breakpoint",desc:'Gives information about the current breakpoint and screen width.<br>Read more about it in the <a href="/breakpoints">breakpoints knowledge base</a> page.'},{title:"colors",desc:'Contains the full list of colors available in the app with their hex values. It includes the colors from the color palette, the four status colors (info, warning, error, success), the primary and secondary color, all your custom colors, and all the color shades (light1-6, dark 1-6).<br>Read more about colors in the <a href="/colors">colors knowledge base</a> page.'},{title:"config",desc:'Contains the computed list of configuration that Wave UI is using. This includes the global configuration you may have defined, as well as all the defaults.<br>Read more about it in the <a href="#wave-ui-global-options">Wave UI global options</a> above section.'},{title:"preferredTheme",desc:'From version 3.0. When the theme is set to <code>auto</code>, Wave UI will detect the user preferred theme and will store this value in this variable. If the user preferred theme changes, from the operating system, this value will be updated.<br>Read more about themes in the <a href="/themes">themes knowledge base</a> page.'},{title:"theme",desc:'From version 3.0. The current theme that Wave UI is using.<br>Read more about themes in the <a href="/themes">themes knowledge base</a> page.'},{title:"notify()",desc:'A function to notify.<br>Read more about the notification manager in the <a href="/w-notification">notification component</a>.'},{title:"switchTheme()",desc:'From version 3.0. A function to switch theme.<br>Read more about themes in the <a href="/themes">themes knowledge base</a> page.'}]}),mounted(){const l=document.location.hash||"";l.includes("presets")?this.openPanes=[!1,!0,!1]:l.includes("the-waveui-helper")&&(this.openPanes=[!1,!1,!0])}},ne=T(Q,[["render",z]]);export{ne as default};
