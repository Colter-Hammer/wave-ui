import{f}from"./index.00671a97.js";import{r as o,o as r,g as d,a as t,w as s,b as c,h as y,_ as p,d as b,x as h}from"./index.4a6c6b42.js";const x=y(`<p>In this example we can look for a chemical element in the list and select it.</p><p>One obvious advantage of the Wave UI autocomplete is the fact that you can provide a different
searchable string than the final label to display.</p><p>For instance, in this example you can look for elements by their name, like literally &quot;Sodium&quot;,
but you can also type the atomic number or symbol to find it.</p><p>you can try these interesting matches (for their symbol is not found in their name string):</p><div class="w-flex gap3"><div class="text-center"><div class="element"><div class="title1 mt7 symbol code">Na</div><div class="number code">11</div></div><div class="primary mt1">Sodium</div></div><div class="text-center"><div class="element"><div class="title1 mt7 symbol code">Mg</div><div class="number code">12</div></div><div class="primary mt1">Magnesium</div></div><div class="text-center"><div class="element"><div class="title1 mt7 symbol code">Cr</div><div class="number code">24</div></div><div class="primary mt1">Chromium</div></div></div>`,5);function $(e,l,u,_,v,m){const i=o("title-link"),a=o("w-autocomplete"),n=o("example");return r(),d("div",null,[t(i,{h2:""},{default:s(()=>[c("Default")]),_:1}),x,t(n,{"content-class":"py12"},{pug:s(()=>[]),default:s(()=>[t(a,{class:"mb12",items:e.chemicalElement},null,8,["items"])]),_:1}),t(i,{h2:""},{default:s(()=>[c("Placeholder")]),_:1}),t(n,{"content-class":"py12"},{pug:s(()=>[]),default:s(()=>[t(a,{class:"mb12",items:e.chemicalElement,placeholder:"select an element"},null,8,["items"])]),_:1})])}const g={data:()=>({chemicalElement:f.definitions.science.chemicalElement.map(e=>(console.log(e),{value:e.symbol,label:e.name,searchable:`${e.symbol}, ${e.name}, ${e.atomicNumber}`}))})},w=p(g,[["render",$]]),k=b("div",{class:"w-divider my12"},null,-1);function N(e,l,u,_,v,m){const i=o("title-link"),a=o("alert"),n=o("component-api");return r(),d("div",null,[k,t(i,{class:"title1",h2:""},{default:s(()=>[c("API")]),_:1}),t(a,{class:"mb6",info:""},{default:s(()=>[c("The missing props descriptions will be added shortly (all the props are already listed).")]),_:1}),t(n,{class:"mt0",items:m.props,descriptions:e.propsDescs,title:"Props"},null,8,["items","descriptions"]),t(n,{items:e.slots,title:"Slots"},null,8,["items"]),t(n,{items:m.events,title:"Events"},null,8,["items"])])}const E={},C={"no-match":{description:'Provide a custom "No match" message to display in the selection menu when there is no match.<br>Default message is <code>No match.</code>.'}},D={},P={data:()=>({propsDescs:E,slots:C}),computed:{props(){return h.props},events(){return h.emits.reduce((e,l)=>(e[l]=D[l]||{})&&e,{})}}},S=p(P,[["render",N]]);function V(e,l,u,_,v,m){const i=o("ui-component-title"),a=o("examples"),n=o("api");return r(),d("main",null,[t(i,{slug:"w-autocomplete","in-progress":""},{default:s(()=>[c("w-autocomplete")]),_:1}),t(a),t(n)])}const A={components:{Examples:w,Api:S}},q=p(A,[["render",V]]);export{q as default};
