import{r as o,o as d,f as u,a as e,w as n,b as s,d as a,i,_ as b}from"./index.ffdea089.js";const h=a("strong",null,"If you are using Nuxt",-1),g=a("a",{class:"ml1",href:"/getting-started#installation-on-nuxt"},"Nuxt installation",-1),_=i(`<p class="mt8">Wave UI components rely on SCSS variables that you can easily override from your SCSS file,
just like this:</p><pre class="ssh-pre" data-label="SCSS"><span class="purple text-bold">@import\xA0</span><span class="red-light2">&#39;wave-ui/src/wave-ui/scss/_variables&#39;</span><span class="blue-grey">;</span><br><br><span class="pink">$base-font-size</span><span class="blue-grey">:\xA0</span><span class="deep-orange">14px</span><span class="blue-grey">;</span><br><span class="pink">$base-increment</span><span class="blue-grey">:\xA0</span><span class="deep-orange">5px</span><span class="blue-grey">;</span></pre><div class="title4">But to do so, you need to slightly modify your config.</div>`,3),m=a("div",{class:"title4 mt4"},"1. Install the devDependencies",-1),y=a("small",{class:"text-italic grey"},"The dev dependencies are only needed for building the project. They will not ship to production.",-1),f={class:"mt3"},v=a("strong",null,"Notes:",-1),w=a("li",null,[a("span",{class:"code"},"sass-loader 11+"),s(" is not compatible with Webpack 4 or less.")],-1),S=a("span",{class:"code"},"sass",-1),x={class:"ml1",href:"https://github.com/sass/sass/issues/2565",target:"_blank"},k=a("div",{class:"title4 mt8"},[s("2. Update "),a("span",{class:"code"},"main.js")],-1),C=a("p",null,"In main.js, replace the 2 Wave UI imports with:",-1),I=a("div",{class:"title4 mt8"},"3. Create an SCSS file & import it globally",-1),$=a("li",null,[s("In your project "),a("span",{class:"code"},"src"),s(" folder, create a "),a("code",null,"_variables.scss"),s(" (usually in an "),a("span",{class:"code"},"scss"),s(`
folder), and import Wave UI's variables: `),a("code",null,"@import 'wave-ui/src/wave-ui/scss/_variables';"),s(`.
`)],-1),j={class:"mt2"},U=a("p",null,[a("strong",null,"Or if you use Vite"),s(`,
In `),a("span",{class:"code"},"vite.config.js"),s(", the import of variables is done like so:")],-1),W=a("div",{class:"title4 mt8"},"Voil\xE0 !",-1),z=a("p",null,"You're all set, you can now override the SCSS variables.",-1),D=a("div",{class:"w-divider my12"},null,-1),N=i('<pre class="ssh-pre" data-label="@/scss/_variables.scss"><span class="grey-light1 text-italic">// First import the Wave UI variables, then override what you want.</span><br><span class="purple text-bold">@import\xA0</span><span class="red-light2">&#39;wave-ui/src/wave-ui/scss/_variables&#39;</span><span class="blue-grey">;</span><br><br><span class="pink">$base-font-size</span><span class="blue-grey">:\xA0</span><span class="deep-orange">14px</span><span class="blue-grey">;</span><br><span class="pink">$base-increment</span><span class="blue-grey">:\xA0</span><span class="purple text-bold">round</span><span class="blue-grey">(</span><span class="pink">$base-font-size</span><span class="blue-grey mx1">/</span><span class="orange">4</span><span class="blue-grey">)</span><span class="blue-grey">;</span><br><span class="pink">$layout-padding</span><span class="blue-grey">:\xA0</span><span class="pink">$base-increment</span><span class="blue-grey mx1">*</span><span class="orange">4</span><span class="blue-grey">;</span><br><span class="pink">$border-radius</span><span class="blue-grey">:\xA0</span><span class="deep-orange">3px</span><span class="blue-grey">;</span><br><span class="pink">$border</span><span class="blue-grey">:\xA0</span><span class="deep-orange">1px solid rgba(0, 0, 0, 0.15)</span><span class="blue-grey">;</span><br><span class="pink">$drawer-max-size</span><span class="blue-grey">:\xA0</span><span class="deep-orange">380px</span><span class="blue-grey">;</span><br><span class="pink">$transition-duration</span><span class="blue-grey">:\xA0</span><span class="deep-orange">0.25s</span><span class="blue-grey">;</span><br><span class="pink">$box-shadow</span><span class="blue-grey">:\xA0</span><span class="deep-orange">0 3px 1px -2px rgba(0, 0, 0, 0.2),</span><br><span class="deep-orange">             0 2px 2px 0 rgba(0, 0, 0, 0.15),</span><br><span class="deep-orange">             0 1px 5px 0 rgba(0, 0, 0, 0.15)</span><span class="blue-grey">;</span></pre>',1),V=i(`<p>It is also possible to control Wave UI&#39;s CSS rules priorities by overriding the CSS base scope:</p><pre class="ssh-pre" data-label="SCSS"><span class="pink">$css-scope</span><span class="blue-grey mr1">:</span><span class="red-light2">&#39;.w-app&#39;</span><span class="blue-grey">;</span></pre><p>For instance if you set the scope to <code>html &gt; body &gt; div.w-app</code>, the default
<code>.w-app .primary {color: #234781;}</code> would become
<code>html &gt; body &gt; div.w-app .primary {color: #234781;}</code>.</p>`,3),T=a("p",null,[s(`You may want to use another CSS framework (like Tailwind) instead of the Wave UI's built-in CSS
layout classes.`),a("br"),s(`
This is not recommended, but it's possible to disable the CSS layout classes of Wave UI so they
don't conflict with the external library.`),a("br"),s(`
For this, follow the above steps in `),a("a",{href:"#modify-your-config"},"Modify your config"),s(`, then you
can set the `),a("code",{class:"pink"},"$use-layout-classes"),s(" variable to "),a("code",null,"false"),s(".")],-1),B={class:"ml2",href:"https://github.com/antoniandre/wave-ui/blob/master/src/wave-ui/scss/_layout.scss",target:"_blank"};function F(Y,G){const l=o("title-link"),p=o("alert"),t=o("ssh-pre"),r=o("w-icon"),c=o("w-tag");return d(),u("main",null,[e(l,{class:"mt4",h1:"",slug:"customization"},{default:n(()=>[s("Customization Via SCSS (optional)")]),_:1}),e(p,{info:""},{default:n(()=>[h,s(", the steps to follow are different. Check the last paragraph of the"),g,s(".")]),_:1}),_,e(l,{h2:""},{default:n(()=>[s("Modify your config")]),_:1}),m,e(t,{class:"mb2",language:"shell"},{default:n(()=>[s("npm i -D pug pug-plain-loader sass sass-loader@10")]),_:1}),y,a("p",f,[v,a("ul",null,[w,a("li",null,[s("The "),S,s(" update is needed to handle the"),a("a",x,[s("new Sass division"),e(r,{class:"ml1"},{default:n(()=>[s("mdi mdi-open-in-new")]),_:1})]),s(".")])])]),k,C,e(t,{class:"mt5",language:"js",label:"main.js"},{default:n(()=>[s(`import WaveUI from 'wave-ui/src/wave-ui'
`)]),_:1}),I,a("ul",null,[$,a("li",j,[s("Import your SCSS variables file globally from Vue config and re-serve the app."),e(t,{class:"mt5",language:"js",label:"vue.config.js"},{default:n(()=>[s(`module.exports = {
  transpileDependencies: ['wave-ui'],
  css: {
    loaderOptions: {
      // \`additionalData\` was called \`prependData\` prior sass-loader 9.
      sass: { additionalData: '@import "@/scss/_variables.scss";' }
    }
  }
}
`)]),_:1}),U,e(t,{language:"js",label:"vite.config.js"},{default:n(()=>[s(`css: {
  preprocessorOptions: {
    scss: {
      additionalData: '@import "@/scss/variables";'
    }
  }
}
`)]),_:1}),e(p,{info:""},{default:n(()=>[s(`Note from the above code that since you import Wave UI source code, you need to transpile it.
`)]),_:1})])]),W,z,D,e(l,{h2:""},{default:n(()=>[s("Basic SCSS overrides")]),_:1}),N,e(l,{h2:""},{default:n(()=>[s("Give Wave UI CSS more priority")]),_:1}),V,e(p,{class:"mt6 py3",success:""},{default:n(()=>[s(`This means you can control all the css rules specificity and consequently their priority!
`)]),_:1}),e(l,{h2:""},{default:n(()=>[s("Disable the CSS layout classes (not recommended)")]),_:1}),T,a("p",null,[s("You can have a look at all the classes that will not be genererated in this file:"),a("a",B,[s("layout.scss on Github"),e(r,{class:"ml1",sm:""},{default:n(()=>[s("mdi mdi-open-in-new")]),_:1})])]),e(l,{h2:"",slug:"presets"},{default:n(()=>[s("Presets"),e(c,{class:"ml3","bg-color":"red-light1",lg:"",color:"white"},{default:n(()=>[s("Coming soon")]),_:1})]),_:1}),e(t,{language:"js",label:"Javascript"},{default:n(()=>[s(`// Buttons example.
{
  'w-button': { sm: true, outlined: true, round: true }
}`)]),_:1})])}const O={},q=b(O,[["render",F]]);export{q as default};
